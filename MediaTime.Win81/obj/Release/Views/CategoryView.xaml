<views:BaseView
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:MediaTime.Win81.Views"
    xmlns:common="using:MediaTime.Win81.Common"
    x:Class="MediaTime.Win81.Views.CategoryView"
    mc:Ignorable="d" RequestedTheme="Light">
    <views:BaseView.Resources>
        <Style x:Key="CategoryButtonStyle" TargetType="Button">
        	<Setter Property="Background" Value="{ThemeResource ButtonBackgroundThemeBrush}"/>
        	<Setter Property="Foreground" Value="{ThemeResource ButtonForegroundThemeBrush}"/>
        	<Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderThemeBrush}"/>
        	<Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
        	<Setter Property="Padding" Value="12,4,12,4"/>
        	<Setter Property="HorizontalAlignment" Value="Left"/>
        	<Setter Property="VerticalAlignment" Value="Center"/>
        	<Setter Property="Opacity" Value="0.75"/>
        	<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        	<Setter Property="FontWeight" Value="SemiBold"/>
        	<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="Button">
        				<Grid >
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="PointerOver">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unfocused"/>
        							<VisualState x:Name="PointerFocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Viewbox >
        						<Grid Height="125" Width="275">
        							<Path Data="F1M68.974,46.547L0,6.478 68.986,0z" Fill="#FFAD3A63" Stretch="None" HorizontalAlignment="Left" Width="85" Height="46" VerticalAlignment="Bottom"/>
        							<Path Data="F1M277.166,0L277.166,85.621 0,85.621 0,0z" Fill="#FFD91B7D" Stretch="None" UseLayoutRounding="False" Margin="0,0,0,40"/>
        						</Grid>
        					</Viewbox>

        					<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
        					<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="BookmarkButtonStyle" TargetType="Button">
        	<Setter Property="Background" Value="{ThemeResource ButtonBackgroundThemeBrush}"/>
        	<Setter Property="Foreground" Value="{ThemeResource ButtonForegroundThemeBrush}"/>
        	<Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderThemeBrush}"/>
        	<Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
        	<Setter Property="Padding" Value="12,4,12,4"/>
        	<Setter Property="HorizontalAlignment" Value="Left"/>
        	<Setter Property="VerticalAlignment" Value="Center"/>
        	<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        	<Setter Property="FontWeight" Value="SemiBold"/>
        	<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="Button">
        				<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
        					<Grid.ChildrenTransitions>
        						<TransitionCollection>
        							<ContentThemeTransition/>
        						</TransitionCollection>
        					</Grid.ChildrenTransitions>
        					<Grid.RenderTransform>
        						<CompositeTransform SkewY="1" TranslateX="-15"/>
        					</Grid.RenderTransform>
        					<Grid.Projection>
        						<PlaneProjection CenterOfRotationZ="0.5" GlobalOffsetZ="1" LocalOffsetY="-1" RotationX="-30" RotationY="-50" GlobalOffsetX="0.5" GlobalOffsetY="0.5"/>
        					</Grid.Projection>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition GeneratedDuration="0:0:0.2" To="Pressed">
        									<VisualTransition.GeneratedEasingFunction>
        										<CubicEase EasingMode="EaseIn"/>
        									</VisualTransition.GeneratedEasingFunction>
        									<Storyboard AutoReverse="True">
        										<DoubleAnimation Duration="0:0:0.2" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
        										<DoubleAnimation Duration="0:0:0.2" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
        										<DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
        										<DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
        											<DoubleAnimation.EasingFunction>
        												<CubicEase EasingMode="EaseIn"/>
        											</DoubleAnimation.EasingFunction>
        										</DoubleAnimation>
        									</Storyboard>
        								</VisualTransition>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="Normal">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="0.75" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="PointerOver">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Border" d:IsOptimized="True"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard AutoReverse="False">
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<FadeOutThemeAnimation TargetName="ContentPresenter"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unfocused"/>
        							<VisualState x:Name="PointerFocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="3">
        						<ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					</Border>
        					<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
        					<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="Transitions">
        		<Setter.Value>
        			<TransitionCollection>
        				<EntranceThemeTransition/>
        			</TransitionCollection>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="SubCategoryAppBarButtonStyle" TargetType="AppBarButton">
        	<Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
        	<Setter Property="VerticalAlignment" Value="Top"/>
        	<Setter Property="HorizontalAlignment" Value="Left"/>
        	<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        	<Setter Property="FontWeight" Value="Normal"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="AppBarButton">
        				<Grid x:Name="RootGrid" Background="Transparent" RenderTransformOrigin="0.5,0.5" >
        					<Grid.Projection>
        						<PlaneProjection/>
        					</Grid.Projection>
        					<Grid.RenderTransform>
        						<CompositeTransform/>
        					</Grid.RenderTransform>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="ApplicationViewStates">
        							<VisualState x:Name="FullSize"/>
        							<VisualState x:Name="Compact">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TextLabel">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="RootGrid">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="75"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="PointerOver">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<DoubleAnimation Duration="0:0:0.2" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="RootGrid" d:IsOptimized="True"/>
        									<DoubleAnimation Duration="0:0:0.2" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="RootGrid" d:IsOptimized="True"/>
        									<DoubleAnimation Duration="0:0:0.2" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
        									<DoubleAnimation Duration="0:0:0.2" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontWeight)" Storyboard.TargetName="TextLabel">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<FontWeight>Bold</FontWeight>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard AutoReverse="True">
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OutlineEllipse">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPressedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<DoubleAnimation Duration="0:0:0.2" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
        									<DoubleAnimation Duration="0:0:0.2" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
        									<DoubleAnimation Duration="0:0:0.2" To="30" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.GlobalOffsetX)" Storyboard.TargetName="RootGrid" d:IsOptimized="True"/>
        									<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="grid1" d:IsOptimized="True"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OutlineEllipse">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextLabel">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unfocused"/>
        							<VisualState x:Name="PointerFocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Grid x:Name="grid" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" >
        						<Grid.RenderTransform>
        							<CompositeTransform/>
        						</Grid.RenderTransform>
        						<Grid.Projection>
        							<PlaneProjection/>
        						</Grid.Projection>
        						<Grid.ColumnDefinitions>
        							<ColumnDefinition Width="Auto"/>
        							<ColumnDefinition/>
        						</Grid.ColumnDefinitions>
        						<Grid x:Name="grid1" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="75" Width="75">
        							<Grid.RenderTransform>
        								<CompositeTransform/>
        							</Grid.RenderTransform>
        							<Ellipse x:Name="BackgroundEllipse" Fill="{ThemeResource AppBarItemBackgroundThemeBrush}" Height="75" UseLayoutRounding="False" Width="75" StrokeThickness="3"/>
        							<Ellipse x:Name="OutlineEllipse" Height="75" Stroke="{ThemeResource AppBarItemForegroundThemeBrush}" StrokeThickness="4" UseLayoutRounding="False" Width="75" Fill="{ThemeResource AppBarItemBackgroundThemeBrush}"/>
        							<ContentPresenter x:Name="Content" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        						</Grid>
        						<TextBlock x:Name="TextLabel" Foreground="{ThemeResource AppBarItemForegroundThemeBrush}" TextAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Label}" VerticalAlignment="Center" Grid.Column="1" Margin="13,14" Style="{StaticResource SubheaderTextBlockStyle}" FontSize="29.333" FontFamily="Segoe UI" FontWeight="Normal" />
        					</Grid>
        					<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
        					<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="PopularHubSectionStyle" TargetType="HubSection">
        	<Setter Property="HorizontalAlignment" Value="Left"/>
        	<Setter Property="VerticalAlignment" Value="Stretch"/>
        	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        	<Setter Property="VerticalContentAlignment" Value="Top"/>
        	<Setter Property="Padding" Value="40,40,40,44"/>
        	<Setter Property="IsTabStop" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="HubSection">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
        					<Border.Resources>
        						<ControlTemplate x:Key="HeaderButtonTemplate" TargetType="Button">
        							<Grid Background="Transparent">
        								<VisualStateManager.VisualStateGroups>
        									<VisualStateGroup x:Name="CommonStates">
        										<VisualState x:Name="Normal"/>
        										<VisualState x:Name="PointerOver">
        											<Storyboard>
        												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HubSectionHeaderPointerOverForegroundThemeBrush}"/>
        												</ObjectAnimationUsingKeyFrames>
        												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="IsHeaderInteractiveMarker">
        													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HubSectionHeaderPointerOverForegroundThemeBrush}"/>
        												</ObjectAnimationUsingKeyFrames>
        											</Storyboard>
        										</VisualState>
        										<VisualState x:Name="Pressed">
        											<Storyboard>
        												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HubSectionHeaderPressedForegroundThemeBrush}"/>
        												</ObjectAnimationUsingKeyFrames>
        												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="IsHeaderInteractiveMarker">
        													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HubSectionHeaderPressedForegroundThemeBrush}"/>
        												</ObjectAnimationUsingKeyFrames>
        											</Storyboard>
        										</VisualState>
        										<VisualState x:Name="Disabled">
        											<Storyboard>
        												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
        												</ObjectAnimationUsingKeyFrames>
        												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="IsHeaderInteractiveMarker">
        													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
        												</ObjectAnimationUsingKeyFrames>
        											</Storyboard>
        										</VisualState>
        									</VisualStateGroup>
        									<VisualStateGroup x:Name="FocusStates">
        										<VisualState x:Name="Focused">
        											<Storyboard>
        												<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
        												<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
        											</Storyboard>
        										</VisualState>
        										<VisualState x:Name="Unfocused"/>
        										<VisualState x:Name="PointerFocused"/>
        									</VisualStateGroup>
        									<VisualStateGroup x:Name="IsHeaderInteractiveStates">
        										<VisualState x:Name="HeaderInteractive">
        											<Storyboard>
        												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IsHeaderInteractiveMarker">
        													<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
        												</ObjectAnimationUsingKeyFrames>
        											</Storyboard>
        										</VisualState>
        										<VisualState x:Name="HeaderNonInteractive"/>
        									</VisualStateGroup>
        									<VisualStateGroup x:Name="FlowDirectionStates">
        										<VisualState x:Name="LeftToRight"/>
        										<VisualState x:Name="RightToLeft">
        											<Storyboard>
        												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Text" Storyboard.TargetName="IsHeaderInteractiveMarker">
        													<DiscreteObjectKeyFrame KeyTime="0" Value="  &#xE26C;"/>
        												</ObjectAnimationUsingKeyFrames>
        											</Storyboard>
        										</VisualState>
        									</VisualStateGroup>
        								</VisualStateManager.VisualStateGroups>
        								<StackPanel Orientation="Horizontal">
        									<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" OpticalMarginAlignment="TrimSideBearings" TextLineBounds="Tight" VerticalAlignment="Center"/>
        									<TextBlock x:Name="IsHeaderInteractiveMarker" AutomationProperties.AccessibilityView="Raw" FontFamily="{ThemeResource SymbolThemeFontFamily}" OpticalMarginAlignment="TrimSideBearings" TextLineBounds="Tight" Text=" &#xE26B;" Visibility="Collapsed" VerticalAlignment="Center"/>
        								</StackPanel>
        								<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Margin="-5" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
        								<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Margin="-5" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        							</Grid>
        						</ControlTemplate>
        					</Border.Resources>
        					<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
        						<Grid.RowDefinitions>
        							<RowDefinition Height="Auto"/>
        							<RowDefinition Height="Auto"/>
        							<RowDefinition Height="*"/>
        						</Grid.RowDefinitions>
        						<Rectangle x:Name="HubHeaderPlaceholder" Grid.Row="0"/>
        						<Button x:Name="HeaderButton" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" FontWeight="{ThemeResource HubSectionHeaderThemeFontWeight}" FontSize="{ThemeResource HubSectionHeaderThemeFontSize}" Margin="{ThemeResource HubSectionHeaderThemeMargin}" Grid.Row="1" Template="{StaticResource HeaderButtonTemplate}"/>
        						<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Row="2"/>
        					</Grid>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </views:BaseView.Resources>
	<Grid >
        <Grid.Background>
            <ImageBrush Stretch="UniformToFill" ImageSource="ms-appx:///Assets/background2xlight.jpg"/>
        </Grid.Background>
        <Grid.ChildrenTransitions>
			<TransitionCollection>
				<EntranceThemeTransition/>
			</TransitionCollection>
		</Grid.ChildrenTransitions>
        <Hub>
            <Hub.Background>
                <LinearGradientBrush EndPoint="1,1" SpreadMethod="Reflect" StartPoint="0,0">
                    <GradientStop Color="#7FFFFFFF"/>
                    <GradientStop Color="#FFFEFFFF" Offset="1"/>
                </LinearGradientBrush>
            </Hub.Background>
            <Hub.Header>
                <!-- Back button and page title -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Style="{StaticResource NavigationBackButtonNormalStyle}"
						Margin="-1,-1,39,0" 
						VerticalAlignment="Top"
						Command="{Binding GoBackCommand}"
						AutomationProperties.Name="Back"
						AutomationProperties.AutomationId="BackButton"
						AutomationProperties.ItemType="Navigation Button"/>
                    <TextBlock Text="{StaticResource AppName}" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1" 
						VerticalAlignment="Top" IsHitTestVisible="false" TextWrapping="NoWrap" RequestedTheme="Light" />
                </Grid>
            </Hub.Header>
            <HubSection Width="690" Margin="0" RenderTransformOrigin="0.5,0.5"  
                        BorderThickness="0" Style="{StaticResource PopularHubSectionStyle}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" >
                <HubSection.Transitions>
                    <TransitionCollection>
                        <AddDeleteThemeTransition/>
                    </TransitionCollection>
                </HubSection.Transitions>
                <HubSection.Background>
                    <ImageBrush ImageSource="ms-appx:///Assets/testTitle.png" Stretch="UniformToFill">
                        <ImageBrush.RelativeTransform>
                            <CompositeTransform CenterY="0.5" CenterX="0.5" Rotation="-5" ScaleX="1.1" ScaleY="1.1"/>
                        </ImageBrush.RelativeTransform>
                    </ImageBrush>
                </HubSection.Background>
                <DataTemplate>
                    <ListView 
                        VerticalContentAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        ScrollViewer.VerticalScrollBarVisibility="Disabled"
                        ItemsSource="{Binding RelatedMedia}" 
                        SelectionMode="None" 
                        IsItemClickEnabled="True"
                        common:ItemClickCommandBehavior.Command="{Binding ItemSelectedCommand}">
                        <ListView.Resources>
                            <ItemsPanelTemplate x:Key="PopularPanelItemsPanelTemplate">
                                <ItemsStackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.Resources>
                        <ListView.Transitions>
                            <TransitionCollection>
                                <AddDeleteThemeTransition/>
                                <EntranceThemeTransition/>
                            </TransitionCollection>
                        </ListView.Transitions>
                        <ListView.FooterTransitions>
                            <TransitionCollection>
                                <AddDeleteThemeTransition/>
                            </TransitionCollection>
                        </ListView.FooterTransitions>
                        <ListView.ItemTemplate>
                            <StaticResource ResourceKey="PopularMediaItemDataTemplate"/>
                        </ListView.ItemTemplate>
                        <ListView.ItemsPanel>
                            <StaticResource ResourceKey="PopularPanelItemsPanelTemplate"/>
                        </ListView.ItemsPanel>
                    </ListView>
                </DataTemplate>
            </HubSection>
            <HubSection Header="Look at" IsHeaderInteractive="True">
                <DataTemplate>
                    <Grid>
                        <GridView 
                            ItemTemplate="{StaticResource ListedMediaItemDataTemplate}"
                            ItemsSource="{Binding ListedMediaCollection}" 
                            SelectionMode="None" 
                            IsItemClickEnabled="True"
                            common:ItemClickCommandBehavior.Command="{Binding ItemSelectedCommand}"/>
                    </Grid>
                </DataTemplate>
            </HubSection>
        </Hub>
    </Grid>
</views:BaseView>

